Metadata-Version: 2.1
Name: langwatch
Version: 0.1.16
Summary: Python SDK for LangWatch for monitoring your LLMs
Home-page: https://github.com/langwatch/langwatch
License: MIT
Author: Rogerio Chaves
Author-email: rogerio@langwatch.ai
Requires-Python: >=3.9,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Provides-Extra: dspy
Provides-Extra: langchain
Provides-Extra: litellm
Provides-Extra: openai
Requires-Dist: coolname (>=2.2.0,<3.0.0)
Requires-Dist: deprecated (>=1.2.14,<2.0.0)
Requires-Dist: dspy-ai (>=2.4.12,<3.0.0) ; extra == "dspy"
Requires-Dist: httpx (>=0.27.0,<0.28.0)
Requires-Dist: langchain (>=0.2.0,<0.3.0) ; extra == "langchain"
Requires-Dist: litellm (>=1.40.15,<2.0.0) ; extra == "litellm"
Requires-Dist: nanoid (>=2.0.0,<3.0.0)
Requires-Dist: openai (>=1.3.7,<2.0.0) ; extra == "openai"
Requires-Dist: pandas (>=2.2.2,<3.0.0)
Requires-Dist: pydantic (>=1,<3)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: retry (>=0.9.2,<0.10.0)
Requires-Dist: tqdm (>=4.66.2,<5.0.0)
Project-URL: Documentation, https://langwatch.ai/docs
Project-URL: Issue Tracker, https://github.com/langwatch/langwatch/issues
Project-URL: Source Code, https://github.com/langwatch/langwatch
Description-Content-Type: text/markdown

# LangWatch Python SDK

Go to [https://docs.langwatch.ai](https://docs.langwatch.ai/integration/python/guide) to get started.

## Contributing

After changing code, to test all integrations are working, run the examples integration test manually (you will need all env vars to be set up):

```
poetry run pytest tests/test_examples.py -s -x
```

Or to test only a specific example, run:

```
poetry run pytest tests/test_examples.py -s -x -k <example_name>
```
