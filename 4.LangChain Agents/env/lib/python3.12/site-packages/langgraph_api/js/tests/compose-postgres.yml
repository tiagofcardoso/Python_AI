services:
  langgraph-postgres:
    image: postgres:16.3
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 60s
      start_interval: 1s
  langgraph-redis:
    image: redis:6
    restart: on-failure
    ports:
      - "6381:6379"
    healthcheck:
      test: redis-cli ping
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 60s
      start_interval: 1s
  api:
    build:
      context: graphs
      dockerfile_inline: |
        FROM langchain/langgraphjs-api:${NODE_VERSION:-20}
        ADD . /deps/graphs
        WORKDIR /deps/graphs
        RUN yarn install --frozen-lockfile
        ENV LANGSERVE_GRAPHS='{"agent":"./agent.mts:graph", "nested": "./nested.mts:graph", "weather": "./weather.mts:graph", "error": "./error.mts:graph", "delay": "./delay.mts:graph"}'
        ENV LANGGRAPH_CONFIG='{"agent": {"configurable": {"model_name": "openai"}}}'
        RUN tsx /api/langgraph_api/js/build.mts
    depends_on:
      langgraph-postgres:
        condition: service_healthy
      langgraph-redis:
        condition: service_healthy
    ports:
      - "9123:8000"
    healthcheck:
      test: python /api/healthcheck.py
      interval: 60s
      start_interval: 1s
      start_period: 10s
    environment:
      REDIS_URI: redis://langgraph-redis:6379
      DATABASE_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable
      N_JOBS_PER_WORKER: "5"
      LANGGRAPH_CLOUD_LICENSE_KEY: ${LANGGRAPH_CLOUD_LICENSE_KEY}
      FF_JS_ZEROMQ_ENABLED: ${FF_JS_ZEROMQ_ENABLED}
